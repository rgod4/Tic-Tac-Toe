{"version":3,"sources":["Component/Form.js","Component/GameGrid.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","handlechange1","event","setState","user1","target","value","handlechange2","user2","handlesubmission","preventDefault","sendData","state","onSubmit","this","className","htmlFor","id","type","onChange","placeholder","Component","GameGrid","handleClick","localName","gameover","idx","i","Number","j","cells","heading","val","turn","prev","map","x","a","y","b","count","checkWin","Cells","c1","k","c2","c3","selected","playagain","names","btnref","React","createRef","w","window","innerWidth","width","document","querySelectorAll","forEach","style","height","jsxobj","gamewithoutbtn","onClick","ref","App","getdata","data","showgame","gameref","formref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.64e52c8c.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass Form extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             user1:\"Player 1\",\r\n             user2:\"Player 2\"\r\n        }\r\n    }\r\n    \r\n    handlechange1=(event)=>{\r\n        this.setState({\r\n            user1: event.target.value\r\n        })\r\n    }\r\n    handlechange2=(event)=>{\r\n        this.setState({\r\n            user2: event.target.value\r\n        })\r\n    }\r\n\r\n    handlesubmission=(event)=>{\r\n        event.preventDefault();\r\n        this.props.sendData({...this.state});\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <form onSubmit={this.handlesubmission}>\r\n                    <div className=\"inpbox\">\r\n                        <label htmlFor=\"user1\" className=\"red\">Player X Name</label>\r\n                        <input id=\"user1\" className=\"red\" type=\"text\" onChange={this.handlechange1} value={this.state.user1} placeholder=\"Enter Name\"></input>\r\n                    </div>\r\n                    <div className=\"inpbox\">\r\n                        <label htmlFor=\"user2\" className=\"green\">Player O Name</label>\r\n                        <input id=\"user2\" type=\"text\" className=\"green\" onChange={this.handlechange2} value={this.state.user2} placeholder=\"Enter Name\"></input>\r\n                    </div>\r\n                    <input className=\"btn\" type=\"submit\" value=\"Play\"></input>\r\n                </form>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form\r\n","import React, { Component } from 'react'\r\n\r\nclass GameGrid extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            cells: [[0, 0, 0], [0, 0, 0], [0, 0, 0]],\r\n            turn: 0,\r\n            count: 0,\r\n            gameover: false\r\n        }\r\n        this.selected=[[0,0,0],[0,0,0],[0,0,0]]\r\n        this.val = [[\"\", \"\"], [this.props.names.user1, 'X'], [this.props.names.user2, 'O']];\r\n        this.heading = `${this.val[1][0]}'s Turn`;\r\n        this.btnref = React.createRef();\r\n    }\r\n\r\n    componentDidMount(){\r\n        let w=window.innerWidth;\r\n        if(w<=425){\r\n            let width=`${w/3}px`;\r\n            document.querySelectorAll('td').forEach((x)=>{\r\n                x.style.width = x.style.height = width;\r\n            })\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n        let w=window.innerWidth;\r\n        if(w<=425){\r\n            let width=`${w/3}px`;\r\n            document.querySelectorAll('td').forEach((x)=>{\r\n                x.style.width = x.style.height = width;\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    handleClick = (event) => {\r\n        if (event.target.localName !== \"td\"||this.state.gameover )\r\n            return;\r\n\r\n        let idx = event.target.id;\r\n        let i = Number(idx[0]);\r\n        let j = Number(idx[1]);\r\n\r\n        if (this.state.cells[i][j] === 0) {\r\n            this.heading = `${this.val[2 - this.state.turn][0]}'s Turn`;\r\n            this.setState((prev) => {\r\n                return {\r\n                    cells: prev.cells.map((x, a) => {\r\n                        return (\r\n                            x.map((y, b) => {\r\n                                if (a === i && b === j)\r\n                                    return prev.turn + 1;\r\n                                else\r\n                                    return y;\r\n                            }))\r\n                    }),\r\n                    turn: 1 - prev.turn,\r\n                    count: prev.count + 1\r\n                }\r\n            }, () => {\r\n                this.checkWin(i, j, { ...this.state });\r\n            });\r\n        }\r\n    }\r\n\r\n    checkWin = (i, j, state) => {\r\n        let Cells = state.cells;\r\n        let c1 = true;\r\n        for (let k = 0; k < 3; k++) {\r\n            if (Cells[i][k] !== Cells[i][j]) {\r\n                c1 = false;\r\n                break;\r\n            }\r\n        }\r\n        let c2 = true;\r\n        for (let k = 0; k < 3; k++) {\r\n            if (Cells[k][j] !== Cells[i][j]) {\r\n                c2 = false;\r\n                break;\r\n            }\r\n        }\r\n        let c3 = false;\r\n        if ((i === j) && (Cells[1][1] === Cells[2][2]) && (Cells[1][1] === Cells[0][0])){\r\n            c3 = true;\r\n            this.selected[0][0]=this.selected[1][1]=this.selected[2][2]=1;\r\n        }\r\n        if ((i === 0 && j === 2) || (i === 1 && j === 1) || (i === 2 && j === 0)) {\r\n            if ((Cells[1][1] === Cells[0][2]) && (Cells[1][1] === Cells[2][0])){\r\n                c3 = true;\r\n                this.selected[0][2]=this.selected[1][1]=this.selected[2][0]=1;    \r\n            }\r\n        }\r\n\r\n        if (c1 || c2 || c3) {\r\n            if(c1){\r\n                for (let k = 0; k < 3; k++) \r\n                    this.selected[i][k]=1;\r\n            }\r\n            else if(c2){\r\n                for (let k = 0; k < 3; k++)\r\n                    this.selected[k][j]=1;\r\n            }\r\n            this.heading = `${this.val[Cells[i][j]][0]} wins the game`;\r\n            this.setState({ gameover: true })\r\n        }\r\n        else if (state.count === 9) {\r\n            this.heading = `Game Drawn`;\r\n            this.setState({ gameover: true })\r\n        }\r\n    }\r\n\r\n    playagain = () => {\r\n        this.heading = \"Let's Begin game\";\r\n        this.selected=[[0,0,0],[0,0,0],[0,0,0]];\r\n        this.setState({\r\n            cells: [[0, 0, 0], [0, 0, 0], [0, 0, 0]],\r\n            turn: 0,\r\n            count: 0,\r\n            gameover: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let { cells } = this.state;\r\n        let jsxobj;\r\n        if(this.state.gameover===false)\r\n            jsxobj=<h1 className={this.state.turn?\"green\":\"red\"}>{this.heading}</h1>\r\n        else\r\n            jsxobj=<h1 className={this.state.turn?\"red\":\"green\"}>{this.heading}</h1>\r\n        let gamewithoutbtn=(\r\n            <>\r\n                \r\n                {jsxobj}\r\n                <table onClick={this.handleClick}>\r\n                    <tbody>\r\n                        {\r\n                            cells.map((x, i) => {\r\n                                return (\r\n                                    <tr key={i}>\r\n                                        {\r\n                                            x.map((y, j) => {\r\n                                                return (\r\n                                                    <td className={(this.selected[i][j]?\"selected \":\"\")+(cells[i][j]===1?\"red\":\"green\")} key={j} id={`${i}${j}`}>{this.val[y][1]}</td>\r\n                                            )\r\n                                        })\r\n                                        }\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </>\r\n        )\r\n\r\n        if(this.state.gameover){\r\n            return (\r\n                <> \r\n                    {gamewithoutbtn}  \r\n                    <div ref={this.btnref} className={this.state.gameover ? \"show\" : \"hide\"}>\r\n                        <button className=\"btn\" onClick={this.playagain}>Play Again</button>\r\n                    </div>\r\n                </>\r\n            )\r\n        }\r\n        else\r\n            return gamewithoutbtn;\r\n    }\r\n}\r\n\r\nexport default GameGrid","import React from 'react';\nimport { Component } from 'react';\nimport './App.css';\nimport Form from './Component/Form';\nimport GameGrid from './Component/GameGrid';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)  \n    this.state = {\n      user1:\"\",\n      user2:\"\",\n      showgame:false\n    }\n    this.gameref=React.createRef();\n    this.formref=React.createRef();\n  }\n  \n  getdata=(data)=>{\n    this.setState({\n      user1:data.user1,\n      user2:data.user2,\n      showgame:true\n    })\n  }\n\n  render(){\n    if(this.state.showgame===false){\n      return (\n        <div  className=\"form-cont\">\n          <Form sendData={this.getdata}/>\n        </div>\n      );\n    }\n    else{\n      return (\n          <div className=\"game-cont\">\n            <GameGrid names={this.state}/>\n          </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}